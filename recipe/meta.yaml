{% set name = "paintera" %}
{% set version = "0.26.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 7b2cb9ed59925df1e1601e434e538ded7ae932d8145c2d1a09f5e197c9d1c32b

build:
  number: 1
  script: {{ PYTHON }} -m pip install . -vvv
  entry_points:
    - paintera=paintera:launch_paintera
    - generate-paintera-bash-completion=paintera:generate_paintera_bash_completion

requirements:
  host:
    - python
    - pip
  run:
    - python
    - jgo >=1.0.0
    - paintera-conversion-helper >=0.8.0
    - openjdk >=11.0.8
    - maven >=3.6.0
    - gtk3
    - xorg-libxi  # [unix]
    - xorg-libxcursor  # [unix]
    - xorg-libxdamage  # [unix]
    - xorg-libxcomposite  # [unix]
    - xorg-libxrandr  # [unix]
    - xorg-libxinerama  # [unix]
    - xorg-libxpm  # [unix]
    - xorg-libxaw  # [unix]
    - xorg-libxfixes  # [unix]

test:
  commands:
    - test -f $PREFIX/bin/paintera  # [unix]
    - test -f $PREFIX/bin/generate-paintera-bash-completion  # [unix]
    # - test -f $PREFIX/share/bash-completion/completions/paintera  # [unix] # use this once there is a good way of running generate-paintera-bash-completion after installation
    # - paintera --help # use this once Java/maven is figured out on host
    # - generate-paintera-bash-completion --help # use this once Java/maven is figured out on host
    # - test "$(paintera --version 2>&1)" = "{{ version }}"  # [unix] # use this test once --version is changed to stdout instead of logging
  imports: paintera

about:
  home: https://github.com/saalfeldlab/paintera-cmd
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: LICENSE.txt
  summary: Python command line launcher for Paintera
  doc_url: https://github.com/saalfeldlab/paintera-cmd
  dev_url: https://github.com/saalfeldlab/paintera-cmd

extra:
  recipe-maintainers:
    - hanslovsky
    - igorpisarev
    - axtimwalde
    - hulbertc
